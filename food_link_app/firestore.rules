rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if user is participant in chat
    function isParticipant(chatData) {
      return isSignedIn() && request.auth.uid in chatData.participants;
    }
    
    // Chat documents - only participants can read/write
    match /chats/{chatId} {
      allow read: if isSignedIn() && isParticipant(resource.data);
      allow create: if isSignedIn() && isParticipant(request.resource.data);
      allow update: if isSignedIn() && isParticipant(resource.data);
      allow delete: if false; // Prevent deletion
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isSignedIn() && isParticipant(get(/databases/$(database)/documents/chats/$(chatId)).data);
        allow create: if isSignedIn() && request.resource.data.senderId == request.auth.uid;
        allow update: if isSignedIn(); // Allow marking as read
        allow delete: if false; // Prevent deletion
      }
    }
    
    // User profiles - users can only read/write their own data
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && request.auth.uid == userId;
    }
    
    // Donations - authenticated users can read, only owner can write
    match /donations/{donationId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.donorId == request.auth.uid;
      allow update: if isSignedIn() && resource.data.donorId == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.donorId == request.auth.uid;
    }
    
    // Requests - authenticated users can read, only owner can write
    match /requests/{requestId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.requesterId == request.auth.uid;
      allow update: if isSignedIn() && resource.data.requesterId == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.requesterId == request.auth.uid;
    }
  }
}
